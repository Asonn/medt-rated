import RPi.GPIO as GPIO
from time import sleep

GPIO.setmode(GPIO.BCM)

GPIO.setwarnings(False)

LeftWheel = [4, 17, 27, 22]
RightWheel = [26, 19, 13, 9]

for pin in LeftWheel+RightWheel:
    GPIO.setup(pin, GPIO.OUT)
    GPIO.output(pin, False)

StepCounter = 0

StepCount1 = 8
Seq1 = []
Seq1 = range(0, StepCount1)
Seq1[0] = [1,0,0,0]
Seq1[1] = [1,1,0,0]
Seq1[2] = [0,1,0,0]
Seq1[3] = [0,1,1,0]
Seq1[4] = [0,0,1,0]
Seq1[5] = [0,0,1,1]
Seq1[6] = [0,0,0,1]
Seq1[7] = [1,0,0,1]

StepCount2 = 8
Seq2 = []
Seq2 = range(0, StepCount2)
Seq2[0] = [0,0,0,1]
Seq2[1] = [0,0,1,1]
Seq2[2] = [0,0,1,0]
Seq2[3] = [0,1,1,0]
Seq2[4] = [0,1,0,0]
Seq2[5] = [1,1,0,0]
Seq2[6] = [1,0,0,0]
Seq2[7] = [1,0,0,1]

Seq = Seq2

StepCount = StepCount1

try:
  while True:
    for pin in range(0, 4):
      xpin = RightWheel[pin]
      #ypin = LeftWheel[pin]
      if Seq[StepCounter][pin]!=0:
        GPIO.output(xpin, True)
        #GPIO.output(ypin, True)
      else:
        GPIO.output(xpin, False)
        #GPIO.output(ypin, False)
    StepCounter += 1

    # Als we aan het einde van de stappenvolgorde zijn beland start dan opnieuw
    if (StepCounter==StepCount): StepCounter = 0
    if (StepCounter<0): StepCounter = StepCount

    # Wacht voor de volgende stap (lager = snellere draaisnelheid)
    sleep(.001)

except KeyboardInterrupt:
  # GPIO netjes afsluiten
  GPIO.cleanup()
