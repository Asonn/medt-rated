import RPi.GPIO as GPIO
from time import sleep

GPIO.setmode(GPIO.BCM)

GPIO.setwarnings(False)

# Input pins for Sensors
LeftSensor = 23
MiddleSensor = 25
RightSensor = 24
ButtonPin = 21

# TurnMotor pins, defines wheels
LeftWheel = [26,19,13,6]
RightWheel = [27,22,17,4]

#setup input sensors
GPIO.setup(LeftSensor, GPIO.IN)
GPIO.setup(MiddleSensor, GPIO.IN)
GPIO.setup(RightSensor, GPIO.IN)
GPIO.setup(ButtonPin, GPIO.IN, GPIO.PUD_UP)

# setup pins for left and right Wheel
for pin in RightWheel+LeftWheel:
  print "Setup pins"
  GPIO.setup(pin,GPIO.OUT)
  GPIO.output(pin, False)

# state default button
prev_state = 1

# Definieer variabelen.
StepCounter = 0

# "Vooruit"
StepCount2 = 8
Seq2 = []
Seq2 = range(0, StepCount2)
Seq2[0] = [1,0,0,0]
Seq2[1] = [1,1,0,0]
Seq2[2] = [0,1,0,0]
Seq2[3] = [0,1,1,0]
Seq2[4] = [0,0,1,0]
Seq2[5] = [0,0,1,1]
Seq2[6] = [0,0,0,1]
Seq2[7] = [1,0,0,1]

# "Achteruit"
StepCount3 = 8
Seq3 = []
Seq3 = range(0, StepCount2)
Seq3[0] = [0,0,0,1]
Seq3[1] = [0,0,1,1]
Seq3[2] = [0,0,1,0]
Seq3[3] = [0,1,1,0]
Seq3[4] = [0,1,0,0]
Seq3[5] = [1,1,0,0]
Seq3[6] = [1,0,0,0]
Seq3[7] = [1,0,0,1]

# Welke stappenvolgorde gaan we hanteren?
Seq = Seq3
Seq2 = Seq2

StepCount = StepCount3


try:
    while True:
        # curr_state = GPIO.input(ButtonPin)
        # print("middle %s" % GPIO.input(MiddleSensor))

        if (curr_state != prev_state):
            # once pressed set it back to previous state, for an infinite loop
            curr_state = prev_state;

            # if there is no light for the middle ONLY
            if GPIO.input(LeftSensor) and  GPIO.input(RightSensor) and not GPIO.input(MiddleSensor):
                # go forward

                print("Left")
                sleep(.5)

            if GPIO.input(MiddleSensor) == True:
                print("Middle")
                sleep(.5)

            if GPIO.input(RightSensor) == True:
                print("Right")
                sleep(.5)

except KeyboardInterrupt:
  # GPIO netjes afsluiten
  GPIO.cleanup()
